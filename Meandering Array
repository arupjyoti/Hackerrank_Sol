/*
An array of integers is defined as being in meandering order when the first two elements are the respective largest and smallest elements in the array 
and the subsequent elements alternate between its next largest and next smallest elements. In other words, the elements are in order of 
[first_largest, first_smallest, second_largest, second_smallest, ...].

Example

The array [-1, 1, 2, 3, -5] sorted normally is [-5, -1, 1, 2, 3]. Sorted in meandering order, it becomes [3, -5, 2, -1, 1]

Function Description

The function takes one parameter, unsorted[n]: the unsorted array

Returns: int[n]: the array sorted in meandering order
*/

import java.util.Arrays;
public class MeanderingArray {
    // Function which arrange the array.
    static int[] rearrangeArray(int arr[], int n)
    {
        // Sorting the array elements
        Arrays.sort(arr);
        int[] tempArr = new int[n]; // To store modified array
        int arrInd = 0;
        
        // Traverse from begin and end simultaneously
        for (int i = 0; i < n / 2 ; i++) {
            tempArr[arrInd] = arr[n-i-1]; //largest
            tempArr[++arrInd] = arr[i]; //smallest
            arrInd++;
         }
         
         if(n%2!=0)
            tempArr[arrInd] = arr[n/2];
 
        // Modifying original array
        for (int i = 0; i < n; i++)
            arr[i] = tempArr[i];
        
        return arr;
    }

    // Driver Code
    public static void main(String args[])
    {
        int arr[] = { -1, 1, 2, 3, -5 };
        int n = arr.length;
        
        arr = rearrangeArray(arr, n);
        
        for (int i = 0; i < n; i++) 
            System.out.print(arr[i]+" ");
    }
}
